<!DOCTYPE html>
<html>
<head>
  <title>Admin Page</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background-image: url("images/background.jpg");
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      font-family: "Times New Roman", Times, serif;
    }

    .header {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px;
      box-sizing: border-box;
    }

    .logout-button {
      font-size: 20px;
      color: #7d4a13;
      background-color: #fbead8;
      border: 2px solid #7d4a13;
      border-radius: 5px;
      padding: 5px 10px;
      cursor: pointer;
      font-family: "Times New Roman", Times, serif;
      font-weight: bold;
    }

    .logout-button:hover {
      background-color: #fbead8;
    }

    .search-bar {
      font-size: 20px;
      padding: 5px 10px;
      background-color: #fbead8;
      border: 2px solid #7d4a13;
      border-radius: 5px;
      font-family: "Times New Roman", Times, serif;
      width: 150px;
      color: #6a370f;
    }

    .recipe-container {
      width: 100%;
      height: calc(100vh - 100px);
      overflow-y: auto;
      padding: 20px;
      background-color: rgba(255, 255, 255, 0.8);
      border-radius: 10px;
      box-sizing: border-box;
    }

    .recipe-card {
      background-color: #fbead8;
      border: 1px solid #7d4a13;
      border-radius: 5px;
      margin-bottom: 20px;
      padding: 20px;
      color: #6a370f;
      overflow: hidden;
      position: relative;
      cursor: pointer;
    }

    .recipe-card h2 {
      margin-top: 0;
    }

    .recipe-card img {
      float: left;
      margin-right: 20px;
      width: 150px;
      height: auto;
      border-radius: 5px;
    }

    .recipe-card p {
      overflow: hidden;
    }

    .edit-button,
    .delete-button {
      position: absolute;
      top: 10px;
      padding: 5px 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      color: #fbead8;
      font-family: "Times New Roman", Times, serif;
      font-weight: bold;
    }

    .edit-button {
      right: 70px;
      background-color: #4CAF50;
    }

    .delete-button {
      right: 10px;
      background-color: #f44336;
    }

    .edit-button:hover {
      background-color: #45a049;
    }

    .delete-button:hover {
      background-color: #e53935;
    }

    .add-button {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 60px;
      height: 60px;
      background-color: #7d4a13;
      color: white;
      border: none;
      border-radius: 50%;
      font-size: 36px;
      line-height: 0;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .add-button:hover {
      background-color: #6a370f;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0, 0, 0);
      background-color: rgba(0, 0, 0, 0.4);
      padding-top: 60px;
    }

    .modal-content {
      background-color: #fbead8;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #7d4a13;
      width: 80%;
      border-radius: 10px;
      position: relative;
      color: #6a370f;
    }

    .close {
      color: #7d4a13;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      cursor: pointer;
    }

    .modal img {
      display: block;
      float: right;
      margin: 0 auto;
      width: 30%;
      height: auto;
      border-radius: 10px;
    }

    .modal-content h2 {
      text-align: left;
    }
  </style>
</head>
<body>
  <div class="header">
    <button class="logout-button" onclick="location.href='/login'">Kijelentkezés</button>
    <input type="text" class="search-bar" id="searchInput" onkeyup="searchRecipes()" placeholder="Keresés">
  </div>
  <div class="recipe-container" id="recipeContainer">
    <!-- A receptkártyák dinamikusan generálódnak itt -->
  </div>

  <!-- Új recept hozzáadása gomb -->
  <button class="add-button">+</button>

  <!-- Recept modális ablak -->
  <div id="recipeModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2 id="modalTitle"></h2>
      <img id="modalImage" src="" alt="">
      <p id="modalDescription"></p>
      <h3>Hozzávalók:</h3>
      <ul id="modalIngredients"></ul>
      <h3>Elkészítési útmutató:</h3>
      <ol id="modalInstructions"></ol>
      <p id="modalPrepTime"></p>
      <p id="modalCookTime"></p>
      <p id="modalServings"></p>
    </div>
  </div>

  <!-- Új recept hozzáadása modal -->
<div id="addRecipeModal" class="modal">
  <div class="modal-content">
      <span class="close close-add">&times;</span>
      <h2>Új Recept Hozzáadása</h2>
      <form id="addRecipeForm">
          <input type="text" id="newRecipeName" placeholder="Recept neve" required><br>
          <input type="text" id="imagePath" name="imagePath" placeholder="pl. images/recept.jpg" required><br>
          <input type="text" id="newRecipeDescription" placeholder="Leírás" required><br>
          <input type="text" id="newRecipeIngredients" placeholder="Hozzávalók (vesszővel elválasztva)" required><br>
          <input type="text" id="newRecipeInstructions" placeholder="Elkészítési útmutató" required><br>
          <input type="number" id="newRecipePrepTime" placeholder="Előkészítési idő (percben)" required><br>
          <input type="number" id="newRecipeCookTime" placeholder="Sütési/Főzési idő (percben)" required><br>
          <input type="number" id="newRecipeServings" placeholder="Adagok száma" required><br>
          <button type="submit">Recept Hozzáadása</button>
      </form>
  </div>
</div>


<!-- Recept szerkesztése modal -->
<div id="editRecipeModal" class="modal">
  <div class="modal-content">
      <span class="close close-edit">&times;</span>
      <h2>Recept Szerkesztése</h2>
      <form id="editRecipeForm">
          <input type="hidden" id="editRecipeId">
          <input type="text" id="editRecipeName" placeholder="Recept neve" required><br>
          <input type="text" id="editImagePath" name="editImagePath" placeholder="pl. images/recept.jpg" required><br>
          <input type="text" id="editRecipeDescription" placeholder="Leírás" required><br>
          <input type="text" id="editRecipeIngredients" placeholder="Hozzávalók (vesszővel elválasztva)" required><br>
          <input type="text" id="editRecipeInstructions" placeholder="Elkészítési útmutató" required><br>
          <input type="number" id="editRecipePrepTime" placeholder="Előkészítési idő (percben)" required><br>
          <input type="number" id="editRecipeCookTime" placeholder="Sütési/Főzési idő (percben)" required><br>
          <input type="number" id="editRecipeServings" placeholder="Adagok száma" required><br>
          <button type="submit">Recept Mentése</button>
      </form>
  </div>
</div>



  <script>
    // Adatok betöltése az adatbázisból
    document.addEventListener('DOMContentLoaded', function() {
        fetch('/recipe')
            .then(response => response.json())
            .then(data => {
                updateRecipeCards(data);
                console.log(data);
            })
            .catch(error => {
                console.error('Hiba a receptek betöltése során:', error);
            });
    });

    document.querySelector('.close').addEventListener('click', function() {
      document.getElementById('recipeModal').style.display = 'none';
    });

    function editRecipe(recipe) {
      document.getElementById('editRecipeId').value = recipe.id;
      document.getElementById('editRecipeName').value = recipe.nev;
      document.getElementById('editImagePath').value = recipe.kep;
      document.getElementById('editRecipeDescription').value = recipe.leiras;
      document.getElementById('editRecipeIngredients').value = recipe.hozzavalok;
      document.getElementById('editRecipeInstructions').value = recipe.keszitesi_utmutato;
      document.getElementById('editRecipePrepTime').value = parseInt(recipe.elokeszitesi_ido);
      document.getElementById('editRecipeCookTime').value = parseInt(recipe.sutesi_ido);
      document.getElementById('editRecipeServings').value = recipe.adagok_szama;
      document.getElementById('editRecipeModal').style.display = 'block';
    }
    
    document.querySelector('.close-edit').addEventListener('click', function() {
      document.getElementById('editRecipeModal').style.display = 'none';
    });

    document.getElementById('editRecipeForm').addEventListener('submit', function(event) {
      event.preventDefault();
      
      const updatedRecipe = {
        id: document.getElementById('editRecipeId').value,
        nev: document.getElementById('editRecipeName').value,
        kep: document.getElementById('editImagePath').value,
        leiras: document.getElementById('editRecipeDescription').value,
        hozzavalok: document.getElementById('editRecipeIngredients').value,
        keszitesi_utmutato: document.getElementById('editRecipeInstructions').value,
        elokeszitesi_ido: document.getElementById('editRecipePrepTime').value + ' perc',
        sutesi_ido: document.getElementById('editRecipeCookTime').value + ' perc',
        adagok_szama: document.getElementById('editRecipeServings').value
      };
    
      fetch(`/recipe/${updatedRecipe.id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(updatedRecipe)
      })
      .then(response => {
        if (response.ok) {
          return response.json();
        }
        throw new Error('Something went wrong on api server!');
      })
      .then(updatedRecipeFromServer => {
        console.log(updatedRecipeFromServer);
        document.getElementById('editRecipeModal').style.display = 'none';
        // Frissítsük a recepteket a felületen
        fetch('/recipe')
            .then(response => response.json())
            .then(data => {
                updateRecipeCards(data);
            })
            .catch(error => {
                console.error('Hiba a receptek betöltése során:', error);
            });
    })
      .catch(error => {
        console.error(error);
      });
    });
    

    let recipesData = [];
    function updateRecipeCards(data) {
        recipesData = data; // Helyileg tároljuk az adatokat
        const recipeContainer = document.getElementById('recipeContainer');
        recipeContainer.innerHTML = ''; // Kiürítjük a jelenlegi tartalmat
    
        data.forEach(recipe => {
            const recipeCard = document.createElement('div');
            recipeCard.className = 'recipe-card';
    
            const recipeImage = document.createElement('img');
            recipeImage.src = recipe.kep;
            recipeImage.alt = recipe.nev;
    
            const recipeTitle = document.createElement('h2');
            recipeTitle.textContent = recipe.nev;
    
            const recipeDescription = document.createElement('p');
            recipeDescription.textContent = recipe.leiras;
    
            const editButton = document.createElement('button');
            editButton.className = 'edit-button';
            editButton.textContent = 'Szerkesztés';
            editButton.onclick = function(event) {
              event.stopPropagation();
              editRecipe(recipe);
              console.log('Szerkesztés:', recipe.nev);
            };
    
            const deleteButton = document.createElement('button');
            deleteButton.className = 'delete-button';
            deleteButton.textContent = 'Törlés';
            deleteButton.onclick = function(event) {
                event.stopPropagation();
                // Törlés logika ide
                if (confirm(`Biztosan törölni szeretnéd a(z) ${recipe.nev} receptet?`)) {
                  fetch(`/recipe/${recipe.id}`, {
                    method: 'DELETE',
                  })
                  .then(response => {
                    if (response.ok) {
                      recipeCard.remove();
                      console.log('Recept törölve:', recipe.nev);
                    } else {
                      console.error('Hiba a recept törlése során:', response.statusText);
                    }
                  })
                  .catch(error => {
                    console.error('Hiba a recept törlése során:', error);
                  });
                }
            };

            recipeCard.appendChild(recipeImage);
            recipeCard.appendChild(recipeTitle);
            recipeCard.appendChild(recipeDescription);
            recipeCard.appendChild(editButton);
            recipeCard.appendChild(deleteButton);
    
            recipeCard.onclick = function(event) {
                if (event.target !== editButton && event.target !== deleteButton) {
                    showRecipeModal(recipe);
                }
            };
    
            recipeContainer.appendChild(recipeCard);
        });
    }

    function showRecipeModal(recipe) {
        document.getElementById('modalTitle').textContent = recipe.nev;
        document.getElementById('modalImage').src = recipe.kep;
        document.getElementById('modalImage').alt = recipe.nev;
        document.getElementById('modalDescription').textContent = recipe.leiras;
    
        const modalIngredients = document.getElementById('modalIngredients');
        modalIngredients.innerHTML = '';
        recipe.hozzavalok.split(", ").forEach(ingredient => {
            const li = document.createElement('li');
            li.textContent = ingredient;
            modalIngredients.appendChild(li);
        });
    
        const modalInstructions = document.getElementById('modalInstructions');
        modalInstructions.innerHTML = '';
        recipe.keszitesi_utmutato.split('. ').forEach(step => {
            if (step.trim().length > 0) {
                const li = document.createElement('li');
                li.textContent = step.trim();
                modalInstructions.appendChild(li);
            }
        });
    
        document.getElementById('modalPrepTime').textContent = `Előkészítési idő: ${recipe.elokeszitesi_ido}`;
        document.getElementById('modalCookTime').textContent = `Sütési idő: ${recipe.sutesi_ido}`;
        document.getElementById('modalServings').textContent = `Adagok száma: ${recipe.adagok_szama}`;
    
        document.getElementById('recipeModal').style.display = 'block';
    }

    document.querySelector('.add-button').addEventListener('click', function() {
      document.getElementById('addRecipeModal').style.display = 'block';
  });
  
  document.querySelector('.close-add').addEventListener('click', function() {
      document.getElementById('addRecipeModal').style.display = 'none';
  });
  
  document.getElementById('addRecipeForm').addEventListener('submit', function(event) {
      event.preventDefault();
      const newRecipe = {
          nev: document.getElementById('newRecipeName').value,
          kep: document.getElementById('imagePath').value,
          leiras: document.getElementById('newRecipeDescription').value,
          hozzavalok: document.getElementById('newRecipeIngredients').value,
          keszitesi_utmutato: document.getElementById('newRecipeInstructions').value,
          elokeszitesi_ido: document.getElementById('newRecipePrepTime').value +' perc',
          sutesi_ido: document.getElementById('newRecipeCookTime').value +' perc',
          adagok_szama: document.getElementById('newRecipeServings').value
      };
      fetch('/recipe', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(newRecipe)
      })
      .then(response => {
          if (response.ok) {
              return response.json();
          }
          throw new Error('Something went wrong on api server!');
      })
      .then(addedRecipe => {
        console.log(addedRecipe);
        document.getElementById('addRecipeModal').style.display = 'none';
        // Frissítsük a recepteket a felületen
        fetch('/recipe')
            .then(response => response.json())
            .then(data => {
                updateRecipeCards(data);
            })
            .catch(error => {
                console.error('Hiba a receptek betöltése során:', error);
            });
    })
    .catch(error => {
        console.error(error);
    });
  });

  function searchRecipes() {
    const input = document.getElementById('searchInput');
    const filter = input.value.toLowerCase();
    const recipeContainer = document.getElementById('recipeContainer');
    const recipeCards = recipeContainer.getElementsByClassName('recipe-card');
  
    for (let i = 0; i < recipeCards.length; i++) {
      const h2 = recipeCards[i].getElementsByTagName('h2')[0];
      const textValue = h2.textContent || h2.innerText;
  
      // Szavakra bontás
      const words = textValue.toLowerCase().split(' ');
  
      // Ellenőrzés, hogy bármelyik szó kezdődik-e a keresett kifejezéssel
      const match = words.some(word => word.startsWith(filter));
  
      if (match) {
        recipeCards[i].style.display = '';
      } else {
        recipeCards[i].style.display = 'none';
      }
    }
  }
  
  </script>
</body>
</html>
