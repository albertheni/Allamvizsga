<!DOCTYPE html>
<html>
<head>
  <title>Admin Page</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background-image: url("images/background.jpg");
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      font-family: "Times New Roman", Times, serif;
    }

    .header {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px;
      box-sizing: border-box;
    }

    .logout-button {
      font-size: 20px;
      color: #7d4a13;
      background-color: #fbead8;
      border: 2px solid #7d4a13;
      border-radius: 5px;
      padding: 5px 10px;
      cursor: pointer;
      font-family: "Times New Roman", Times, serif;
      font-weight: bold;
    }

    .logout-button:hover {
      background-color: #fbead8;
    }

    .search-bar {
      font-size: 20px;
      padding: 5px 10px;
      background-color: #fbead8;
      border: 2px solid #7d4a13;
      border-radius: 5px;
      font-family: "Times New Roman", Times, serif;
      width: 150px;
      color: #6a370f;
    }

    .recipe-container {
      width: 100%;
      height: calc(100vh - 100px);
      overflow-y: auto;
      padding: 20px;
      background-color: rgba(255, 255, 255, 0.8);
      border-radius: 10px;
      box-sizing: border-box;
    }

    .recipe-card {
      background-color: #fbead8;
      border: 1px solid #7d4a13;
      border-radius: 5px;
      margin-bottom: 20px;
      padding: 20px;
      color: #6a370f;
      overflow: hidden;
      position: relative;
      cursor: pointer;
    }

    .recipe-card h2 {
      margin-top: 0;
    }

    .recipe-card img {
      float: left;
      margin-right: 20px;
      width: 150px;
      height: auto;
      border-radius: 5px;
    }

    .recipe-card p {
      overflow: hidden;
    }

    .edit-button,
    .delete-button {
      position: absolute;
      top: 10px;
      padding: 5px 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      color: #fbead8;
      font-family: "Times New Roman", Times, serif;
      font-weight: bold;
    }

    .edit-button {
      right: 70px;
      background-color: #4CAF50;
    }

    .delete-button {
      right: 10px;
      background-color: #f44336;
    }

    .edit-button:hover {
      background-color: #45a049;
    }

    .delete-button:hover {
      background-color: #e53935;
    }

    .add-button {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 60px;
      height: 60px;
      background-color: #7d4a13;
      color: white;
      border: none;
      border-radius: 50%;
      font-size: 36px;
      line-height: 0;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .add-button:hover {
      background-color: #6a370f;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0, 0, 0);
      background-color: rgba(0, 0, 0, 0.4);
      padding-top: 60px;
    }

    .modal-content {
      background-color: #fbead8;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #7d4a13;
      width: 80%;
      border-radius: 10px;
      position: relative;
      color: #6a370f;
    }

    .close {
      color: #7d4a13;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      cursor: pointer;
    }

    .modal img {
      display: block;
      float: right;
      margin: 0 auto;
      width: 30%;
      height: auto;
      border-radius: 10px;
    }

    .modal-content h2 {
      text-align: left;
    }
  </style>
</head>
<body>
  <div class="header">
    <button class="logout-button" onclick="location.href='/login'">Kijelentkezés</button>
    <input type="text" class="search-bar" id="searchInput" onkeyup="searchRecipes()" placeholder="Keresés">
  </div>
  <div class="recipe-container" id="recipeContainer">
    <!-- A receptkártyák dinamikusan generálódnak itt -->
  </div>

  <!-- Új recept hozzáadása gomb -->
  <button class="add-button">+</button>

  <!-- Recept modális ablak -->
  <div id="recipeModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <button class="edit-button">Szerkesztés</button>
      <button class="delete-button">Törlés</button>
      <h2 id="modalTitle"></h2>
      <img id="modalImage" src="" alt="">
      <p id="modalDescription"></p>
      <h3>Hozzávalók:</h3>
      <ul id="modalIngredients"></ul>
      <h3>Elkészítési útmutató:</h3>
      <ol id="modalInstructions"></ol>
      <p id="modalPrepTime"></p>
      <p id="modalCookTime"></p>
      <p id="modalServings"></p>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      fetch('recipes.json')
        .then(response => response.json())
        .then(data => {
          const recipeContainer = document.getElementById('recipeContainer');
          const modal = document.getElementById('recipeModal');
          const modalClose = document.getElementsByClassName('close')[0];
          const addButton = document.querySelector('.add-button');

          modalClose.onclick = function() {
            modal.style.display = 'none';
          }

          window.onclick = function(event) {
            if (event.target == modal) {
              modal.style.display = 'none';
            }
          }

          data.receptek.forEach((recipe, index) => {
            const recipeCard = document.createElement('div');
            recipeCard.className = 'recipe-card';

            const recipeImage = document.createElement('img');
            recipeImage.src = recipe.kep;
            recipeImage.alt = recipe.nev;

            const recipeTitle = document.createElement('h2');
            recipeTitle.textContent = recipe.nev;

            const recipeDescription = document.createElement('p');
            recipeDescription.textContent = recipe.leiras;

            const editButton = document.createElement('button');
            editButton.className = 'edit-button';
            editButton.textContent = 'Szerkesztés';

            const deleteButton = document.createElement('button');
            deleteButton.className = 'delete-button';
            deleteButton.textContent = 'Törlés';

            recipeCard.appendChild(recipeImage);
            recipeCard.appendChild(recipeTitle);
            recipeCard.appendChild(recipeDescription);
            recipeCard.appendChild(editButton);
            recipeCard.appendChild(deleteButton);

            editButton.onclick = function(event) {
              event.stopPropagation();
              // Szerkesztés logika ide
              console.log('Szerkesztés:', recipe.nev);
            };

            deleteButton.onclick = function(event) {
              event.stopPropagation();
              // Törlés logika ide
              console.log('Törlés:', recipe.nev);
            };

            recipeCard.onclick = function(event) {
              if (event.target !== editButton && event.target !== deleteButton) {
                showRecipeModal(recipe);
              }
            };

            recipeContainer.appendChild(recipeCard);
          });

          addButton.onclick = function() {
            console.log('Új recept hozzáadása');
            // Új recept hozzáadása logika ide
          };
        })
        .catch(error => console.error('Error fetching the recipes:', error));

      function showRecipeModal(recipe) {
        document.getElementById('modalTitle').textContent = recipe.nev;
        document.getElementById('modalImage').src = recipe.kep;
        document.getElementById('modalImage').alt = recipe.nev;
        document.getElementById('modalDescription').textContent = recipe.leiras;

        const modalIngredients = document.getElementById('modalIngredients');
        modalIngredients.innerHTML = '';
        recipe.hozzavalok.forEach(ingredient => {
          const li = document.createElement('li');
          li.textContent = ingredient;
          modalIngredients.appendChild(li);
        });

        const modalInstructions = document.getElementById('modalInstructions');
        modalInstructions.innerHTML = '';
        recipe.keszitesi_utmutato.split('. ').forEach(step => {
          if (step.trim().length > 0) {
            const li = document.createElement('li');
            li.textContent = step.trim();
            modalInstructions.appendChild(li);
          }
        });

        document.getElementById('modalPrepTime').textContent = `Előkészítési idő: ${recipe.elokeszitesi_ido}`;
        document.getElementById('modalCookTime').textContent = `Sütési idő: ${recipe.sutesi_ido}`;
        document.getElementById('modalServings').textContent = `Adagok száma: ${recipe.adagok_szama}`;

        modal.style.display = 'block';
      }
    });

    function searchRecipes() {
      const input = document.getElementById('searchInput');
      const filter = input.value.toLowerCase();
      const recipeContainer = document.getElementById('recipeContainer');
      const recipeCards = recipeContainer.getElementsByClassName('recipe-card');

      for (let i = 0; i < recipeCards.length; i++) {
        const h2 = recipeCards[i].getElementsByTagName('h2')[0];
        const p = recipeCards[i].getElementsByTagName('p')[0];
        const textValue = h2.textContent || h2.innerText;
        const descriptionValue = p.textContent || p.innerText;

        if (textValue.toLowerCase().indexOf(filter) > -1 || descriptionValue.toLowerCase().indexOf(filter) > -1) {
          recipeCards[i].style.display = '';
        } else {
          recipeCards[i].style.display = 'none';
        }
      }
    }
  </script>
</body>
</html>
